/*
    바킹독님 알고리즘 강의 중 우선순위 큐 단원
    https://blog.encrypted.gg/1015
    
    #우선순위 큐
    pop을 할때 가장 먼저 들어온 원소가 나오는 대신 우선순위가 가장 높은 원소가 나오는 큐

    - 원소의 추가 O(lg N)
    - 우선순위가 가장 높은 원소의 확인 O(1)
    - 우선순위가 가장 높은 원소의 제거 O(lg N)

    각각 배열로 큐를 구현한다면 
    O(1), O(N), O(N) 이 되겠지만
    힙 자류구조를 이용하면 
    O(lg N), O(1), O(lg N) 에 처리 가능

    #힙
    힙은 이진 트리 모양을 가지고 있다
    이진 검색 트리와는 <이진 트리라는 공통점>만 있을 뿐이고, 다른 자료구조이다

    힙을 최댓값 혹은 최솟값을 찾는 목적으로 사용할 수 있고, 
    최댓값을 찾기 위해 사용하는 힙을 최대힙
    최솟값을 찾기 위해 사용하는 힙을 최소힙 이라고 한다

    최소힙에서는 부모가 자식보다 작아야 한다
    최대힙에서는 부모가 자식보다 커야 한다

    각 루트가 최솟값/최댓값이 된다

    힙에서는 원소를 삽입하는 순서가 bfs(너비우선탐색)의 탐색 순서와 같다
    - 높이가 낮은 곳 부터, 높이가 같은 정점의 경우 왼쪽부터 채워나간다
    때문에, 이진 검색 트리와는 달리 불균형이 발생하지 않고 늘 균형이 잘 맞는 이진 트리가 된다

    #insert
    첫번째 원소는 루트가 된다
    다음 원소가 현재 부모보다 큰 원소라면, 원래 삽입하는 순서 상 위치해야 하는곳에 정상적으로 위치시킨다
    다음 원소가 현재 부모보다 작은 원소라면, 원래 삽입하는 위치에 위치시키고, 부모와 자리를 바꾼다
        바꾼 후 자리에서의 부모와 값을 비교하여 동일한 과정 수행
    => 아무리 비교를 많이해도 최대 높이만큼만 올라가면서 자리를 바꿔주기 때문에 O(lg N)에 수행 가능

    #최소값/최대값 확인
    루트의 값을 확인 O(1)
    !최소힙에서는 최솟값을 효율적으로 확인할 수 있지만, 열번째로 작은 값의 확인이라던가, 최댓값의 확인은 모든 원소를 다 보는게 아닌 한 불가능
    !최대힙도 마찬가지
    => 이진 검색 트리와의 차이점 중 하나

*/