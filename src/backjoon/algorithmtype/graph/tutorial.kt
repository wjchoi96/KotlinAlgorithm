/*
    바킹독님 알고리즘 강의 중 그래프 단원
    https://blog.encrypted.gg/1016
    
    
    #그래프
    정점과 간선으로 이루어진 자료구조
    - 네비게이션에서 최단 경로 찾기
    - 구글 같은 검색엔진에서 랭킹 정하기 
    등
    원소 사이의 연결 관계를 설정해야 하는 상황에서 유용하게 사용된다

    #차수(degree)
    각 정점에 대해서 간선으로 연결된 이웃한 정점의 개수

    #정점(Vertex/Node)
    그래프를 이루는 원소

    #간선(Edge)
    정점을 연결하는 선
    방향성이 존재할 수 있는데, 방향성이 없는 그래프를 무방향 그래프, 방향성이 있는 그래프를 방향 그래프 라고 칭한다
    간선에 방향성이 있다는 것은 일방통행 도로를 생각하면 된다

    #방향그래프에서의 차수는 outdegree, indegree로 나누어진다
    - outdegree = 자기에게서 나가는 간선(자신이 출발점 간선) / 진출 차수
    - indegree = 자기에게 들어오는 간선(자신이 도착점인 간선) / 진입 차수

    #사이클
    임의의 한 점에서 출발해 자기 자신으로 돌아올 수 있는 경로를 칭한다
    그래프 안에 사이클이 하나라도 존재하면 순환 그래프(Cyclic graph), 하나라도 없다면 비순환 그래프(Acyclic graph)라고 칭한다
    사이클을 고려할때, 간선의 방향성도 고려해야 한다

    모든 서로 다른 두 정점 쌍이 간선으로 연결된 그래프를 완전 그래프(Complete Graph)라고 칭하며
    임의의 두 정점 사이에 경로가 항상 존재하는 그래프를 연결 그래프(Connected Graph)라고 칭한다

    !!그래프는 꼭 연결되어 있을 필요도 없고, 
    - 두 정점 사이의 간선이 반드시 1개 이하일 필요도 없으며
    - 간선이 반드시 서로 다른 두 정점을 연결해야 할 필요도 없다 => 정점A에서 출발해 정점A로 되돌아 오는 간선이 있을 수 있다 => 이를 루프(loop)라고 칭한다

    두 정점 사이의 간선이 1개 이하이고, 루프가 존재하지 않는 그래프를 단순 그래프(Simple Graph)라고 칭한다

    !!문제에 따라 
    - 그래프는 연결되어있다/그래프는 연결그래프 이다,
    - 두 정점사이의 간선은 최대 1개 존재한다/같은 간선은 한개만 주어진다
    - 간선의 두 정점은 서로 다르다/간선은 서로 다른 두 정점을 연결한다
    와 같이 조건을 엄밀히 지정하는 경우가 많다
    그러나 이런 추가적인 조건이 없다면, 그래프가 분리되어있거나, 같은 간선이 여러개 있거나, 혹은 루프가 있는 형태도 고려를 해야 한다


    #표현법 -> 구현

*/