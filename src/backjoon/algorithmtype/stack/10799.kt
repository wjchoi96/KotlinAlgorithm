/*
    바킹독님 알고리즘 강의 중 스택, 올바른 괄호 쌍 단원 연습문제

    쇠막대기

    괄호쌍과 같은 유형문제지만, 꼬아서 나온것
    => 유형을 잘 알고 있는 상태에서 머리를 좀 써야하는 문제


    여러개의 쇠막대기를 레이저로 절단하려고 한다
    효율적인 작업을 위해 쇠막대기를 아래에서 위로 겹쳐놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기를 자른다

    쇠막대기와 레이저의 배치는 다음 조건을 만족한다
    - 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다
    - 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다
    - 긴 쇠막대기를 자르는 레이저는 적어도 하나 존재한다
    - 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다

    레이저와 쇠막대기의 배치는 다음처럼 괄호를 이용해 표현 가능
    1. 레이저는 여는괄호와 닫는 괄호의 인접한 쌍'()'으로 표시. '()'는 반드시 레이저를 의미
    2. 쇠막대기의 왼쪽끝은 여는괄호'(', 오른끝은 ')' 닫는 괄호로 표현

    쇠막대기는 레이저에 의해 몇개의 조각으로 잘려진다.

    쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을때, 잘려진 쇠막대기 조각의 총 개수를 구하시오

*/
/*
    0. 여는괄호를 만나면 push, 닫는괄호를 만나면 pop을 수행한다
    1. 레이저를 감지
    - 닫는괄호를 만나 pop을 수행했을때, 여는괄호라면 레이저인것
    2. 레이저를 감지하면 쐈다고 생각한다
    - 레이저를 쐈을때, 앞에있던 여는괄호'(' 의 개수만큼 쇠막대기가 생긴다(레이저의 괄호는 제외) => 스택의 item 개수만큼
    3. 닫는 괄호를 만나면 조각++ 을 해준다

    => 놓친부분 : 닫는괄호를만나면 항상 pop을 수행하기때문에, 닫힌괄호를 만나면 항상 레이저 취급을 받는다
    => 이전 item을 확인해서 레이저임을 판별하도록 수정
*/
/*
    제출
    1. 
*/
import java.util.Stack
fun main(args : Array<String>){
    val bw = System.out.bufferedWriter()
    val br = System.`in`.bufferedReader()
    val stack = Stack<Char>()
    val row = br.readLine()

    var count = 0
    for(i in 0 until row.count()){
        val c = row[i]
        when(c){
            '(' -> 
                stack.push(c)
            ')' -> {
                stack.pop() 
                if(row[i-1] == '('){
                    count += stack.size // 레이저 발사
                }else{
                    count++ // 쇠막대기 하나 끝
                }
            }
        }
    }
    bw.write("$count\n")
   

    bw.flush()
    bw.close()
    br.close()
}